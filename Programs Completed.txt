[1] - Into to programming - 
1) Basic Into to programming and Fundamentals - Conditional & Looping Statement, Break & Continue, Functions, Pointers
2)  digit sum -
3) Reverse Number -
4) Prime no. -
5) Nested Loops  & Patterns - 
5.2) Star Pattern
5.3) Inverted Star Pattern
5.4) half Pyramid  Pattern
5.5) Character Pyramid Pattern
5.6) Hollow Rectangle Pattern
5.7) Inverted & Rotated Half Pyramid
5.8) Floyd's Triangle
5.9) Diamond Pattern
5.10) Butterfly Pattern
6) Number System - 
6.1) Binary to Decimal Conversion -
6.2) Decimal to Binary -

// -------------------


[2] - Arrays- 
1)Initiation Methods of an array and Output & input of an array -
2) Largest Value/Max Element in the array & 2.1) Min Element  -
3)  Dereferences of Pointer concept in Array -
4) Linear Search in array -
5) Reverse an array - 
5.1) using extra space
5.2 - W/o using Extra Space1 - 2 POINTERS APPROACH
6) Binary Search - It always for the Sorted Array
7) Array Pointer - 
7.1. Pointer Arithmetic Approaches -
7.2 - Addition & Subtraction of Constants -
7.3- Addition & Subtraction of Pointers 
7.4 - Comparison Operators 
8) Subarrays -
9) Max Subarray Sum -
9.1 - Clearly Brute Force Approach -
9.2 - Slightly Optimized approach - for decreasing the time complexity
9.3 - Using Most Optimized Approach - Kadane's Algorithms. For very less Time Complexity
10) buy & sell stock problem-
11) Trapping Rainwater Problem -
// -------------------


[3] - Sorting Algorithms - 
1) Bubble Sort Algo -
2) Selection Sort Implementation -
3) Insertion Sort Algorithm & Inbuilt Sorting technique - 
4) Counting Sort
// -------------------


[4] - Matrix in CPP – 
1) 2D Array Basic Introduction & Input, Output
2) Spiral matrix -
3) Diagonal Sum of Matrix -
4) Search for targeted element in Sorted Matrix -
4.1) - Brute Force Approach - most simple method. T.C - O(n*m)
4.2) - Using Binary Search - 2nd Optimum - Row Wise - O(n*logn), Colm Wise - O(m*logn)
4.3) - Staircase Search technique - O(n+m)
// -------------------


[5] - Character Array & Strings in CPP – 
1) Intro to Char Array – 
2) Covert to Upper Letter -
3) Reverse a Char Array -
4) Valid Palindrome in char array -
5) Char Array(String) Functions -
6)String Intro & Basic I/p, o/p operations - 6.1) String Member Functions-
7) Check the two strings are Anagram or not -
// -------------------


[6] - STL - Vector
1) Pair_Sum - FInd if any pair in Sorted Array has target sum
1.1) Brute Forece Approach - using Nested Loops. TC - O(n^2)
1.3) Uisng Linear Approach - 2 Pointer Approach. TC - O(n)
// -------------------


[7] Bit Manipulations – 
1)Bitwise Operators  -
2) Check if even or odd -
3) Get ith Bit of a num - 
4) Set ith Bit - (sets the value to 1) - 
5)Clr ith Bit - (sets the value to 0)
6) No. is power of 2 -
7) Count of Set Bits -
8) Fast Exponentiation -
// -------------------


[8] OOP’s in CPP – 
1) Classes & Object basic Intro -
1.1) Access Modifiers
1.2) Getters & Setters -
2) Encapsulations -
2.1) This Constrcutor
2.2) Types of Cosntrcutrs -
2.3) Copy Constructor Conceppt -
2.4) Shallo & Deep Copy -
3) Destructor - 
4) Inheritance -
4.1) Mode of Inharitance - 
4.2) types of Inheritance -
4.2.1) Single Inheritance -
4.2.2) Multi-Level Inheritance -
4.2.3) Multiple Inheritance -
4.2.4) Hierarchical Inheritance -
4.2.5) Hybrid Inheroitance -
5) Polymorphism -
5.1) Compiletime Polymorphism - 
5.1.1) Function Overloading  -
5.1.2) Function Overloading  -
5.2)Polymorphism -
5.2.1)Function Overriding  -
5.2.2)Virtual Functions -
6) Abstraction -
7) Static Keyword -
8) Friend Class & Friend Function - 
// -------------------


[9] Recursion – 
1)Recursion Basic Understanding-
2)Recursion QUns - 
2.1) Print the numbers in descending  Order
2.2) Stack Overflow -
2.3)Sum of N-Natural Nmbers -
2.4) Print Nth Fibonacci Number -
2.5) Check if Array is Sorted or Not -
2.6) First OCcurence -
2.6.1) Last OCcurence -
2.7) X to the power N  -
3) Tiling problem
4) Remove Duplicates from the String -
5) Friends Pairing Problem -
6) Binary String Problm -
// -------------------


[10] Divide & Conquer – 
1) Merge Sort Algo -
2) Quick Sort Algorithm -
2.1) Quick Sort Worst Case Scenario - 
3) Searching In Rotated Array Problem  - 
// -------------------


